@use 'functions' as *;
@use 'sass:map';

/* color themes from bootstrap */
$primary: #0d6efd;
$secondary: #6c757d;
$success: #198754;
$info: #0dcaf0;
$warning: #ffc107;
$danger: #dc3545;
$light: #f8f9fa;
$dark: #212529;

/*
  css variable syntax: --prefix-colorName-colorShade 
  prefix: clr
  colorName: grey, green, primary, secondary etc
  colorShade (optional): 100, 200 etc.

  example: 
  --clr-green-100
  --clr-primary  // without shade

  Each color theme except 'default' generates a CSS selector :root[data-theme=${theme}]. 
  This allows you to dynamically change the color theme using JavaScript.

*/

$color-prefix: clr-;

$color-theme: (
  default: (
    'primary': $primary,
    'secondary': $secondary,
    'success': $success,
    'info': $info,
    'warning': $warning,
    'danger': $danger,
    'light': $light,
    'dark': $dark,
    'black': #000,
    'white': #fff,
    'tony': (
      100: #100,
      200: #2ff,
    ),
  ),
  grimson: (
    'primary': $success,
    'secondary': $primary,
    'success': $secondary,
  ),
);

$color-theme-map: ();

@each $theme-name, $map in $color-theme {
  $color-theme-map: map.merge(
    $color-theme-map,
    (
      $theme-name: deep-loop($map),
    )
  );
}
