/* 
This file contains SCSS variables sourced from the Bootstrap framework.
Source: https://github.com/twbs/bootstrap/blob/main/scss/_variables.scss
The code used in accordance with Bootstrap's open-source license (MIT).
Modifications may have been made to the original code.
*/
@use 'sass:map';
@use 'sass:string';
@use 'functions' as *;
/* ****************************************************** */
/* general setting
/* ****************************************************** */
$prefix: '';
$enable-negative-margins: true;
$enable-media-query-dark-mode: false;
$enable-color-themes: true;

// ------------------------------------------------------

/* ****************************************************** */
/* breakpoints
/* ****************************************************** */

/* px values */
$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

/* rem values */
// $grid-breakpoints: (
//   xs: 0,
//   sm: px-to-rem(576),
//   md: px-to-rem(768),
//   lg: px-to-rem(992),
//   xl: px-to-rem(1200),
//   xxl: px-to-rem(1400),
// );

// ------------------------------------------------------

/* ****************************************************** */
/* container max-widths
/* ****************************************************** */

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px,
  xxl: 1320px,
);

// ------------------------------------------------------

/* ****************************************************** */
/* Bootstrap Grid System */
/* ****************************************************** */
$bs-prefix: bs-;
$enable-bootstrap-grid-system: true;
$enable-gutters: false;
$grid-columns: 12;
$grid-gutter-width: 24px;
$grid-row-columns: 6;

// container setting
$enable-container-classes: true;
$enable-max-container-classes: true;
$container-padding-x: 12px;

// ------------------------------------------------------
/* ****************************************************** */
/* color Theme
/* ****************************************************** */

$color-prefix: clr-;
$hover-prefix: hover-;

$primary: #0d6efd;
$secondary: #6c757d;
$success: #198754;
$info: #0dcaf0;
$warning: #ffc107;
$danger: #dc3545;
$light: #f8f9fa;
$dark: #212529;

$color-theme: (
  default: (
    color: (
      'primary': $primary,
      'secondary': $secondary,
      'success': $success,
      'info': $info,
      'warning': $warning,
      'danger': $danger,
      'light': $light,
      'dark': $dark,
    ),
    hover: (
      'primary': #012345,
      'secondary': $secondary,
      'success': $success,
      'info': $info,
      'warning': $warning,
      'danger': $danger,
      'light': $light,
      'dark': $dark,
      'zero': #000,
      'quindecenary': #fff,
    ),
  ),
);

$selected-theme: default;
$selected-theme-hex-colors: map.get($color-theme, $selected-theme, color);

$selected-theme-rgb-colors: map-loop(
  $selected-theme-hex-colors,
  to-rgb,
  '$value'
);

/* ****************************************************** */
/* Gray colors
/* ****************************************************** */

$white: #fff;
$gray-100: #f8f9fa;
$gray-200: #e9ecef;
$gray-300: #dee2e6;
$gray-400: #ced4da;
$gray-500: #adb5bd;
$gray-600: #6c757d;
$gray-700: #495057;
$gray-800: #343a40;
$gray-900: #212529;
$black: #000;

$body-color: $gray-900;
$body-bg: $white;

/* ****************************************************** */
/* Font weight */
/* ****************************************************** */

$font-weight-thin: 100;
$font-weight-extra-light: 200;
$font-weight-light: 300;
$font-weight-normal: 400;
$font-weight-medium: 500;
$font-weight-semibold: 600;
$font-weight-bold: 700;
$font-weight-extra-bold: 800;
$font-weight-black: 900;

// ------------------------------------------------------

/* ****************************************************** */
/* Spacing */
/* ****************************************************** */

$factor: 0.25rem;
$sizes-regular: ();

@for $i from 0 through 30 {
  $sizes-regular: map.merge(
    $sizes-regular,
    (
      $i: if($i == 0, $i, $factor * $i),
    )
  );
}

$sizes-irregular: (
  i121: 121px,
  i67: 67px,
);

$negative-spacers: if(
  $enable-negative-margins,
  map.merge(negativify-map($sizes-regular), negativify-map($sizes-irregular)),
  null
);

// ------------------------------------------------------

/* ****************************************************** */
/* Box shadow
/* ****************************************************** */
$box-shadow: 0 0.5rem 1rem rgba($black, 0.15);
$box-shadow-sm: 0 0.125rem 0.25rem rgba($black, 0.075);
$box-shadow-lg: 0 1rem 3rem rgba($black, 0.175);
$box-shadow-inset: inset 0 1px 2px rgba($black, 0.075);

// ------------------------------------------------------

/* ****************************************************** */
/* Z-index
/* ****************************************************** */
$zindex-levels: (
  n1: -1,
  0: 0,
  1: 999,
  2: 998,
  3: 997,
  4: 996,
);

// ------------------------------------------------------

/* ****************************************************** */
/* responsive custom Properties - xs is default
/* ****************************************************** */
$custom-properties: (
  'xs': (
    'z-level-1': 1,
  ),
  'sm': (),
  'md': (),
  'lg': (),
  'xl': (),
  'xxl': (),
);

// ------------------------------------------------------

/* ****************************************************** */
/* custom properties for clamp()
/* ****************************************************** */

$size-prefix: fs-fluid-;
$size-relative-to: 'viewport';
$size-threshold-unit: 'rem';
$size-preferred-unit: 'rem';

$size-clamp: (
  heading-1: (
    576px: 32,
    1400px: 150,
  ),
  heading-2: (
    375px: 16,
    992px: 28,
  ),
);

$spacing-prefix: fluid-;
$spacing-relative-to: 'viewport';
$spacing-threshold-unit: 'px';
$spacing-preferred-unit: 'px';

$spacing-clamp: (
  '15-30': (
    576px: 32,
    1400px: 150,
  ),
  '50-15': (
    992px: 50,
    1400px: 120,
  ),
);

// ------------------------------------------------------

/* ****************************************************** */
/* transitions
/* ****************************************************** */
$enable-transitions: true;
$enable-reduced-motion: false;

$transition-base: all 0.2s ease-in-out;
$transition-fade: opacity 0.15s linear;
$transition-collapse: height 0.35s ease;
$transition-collapse-width: width 0.35s ease;

// ------------------------------------------------------

/* ****************************************************** */
/* line-height
/* ****************************************************** */
$line-height-base: 1.5;
$line-height-sm: 1.25;
$line-height-lg: 2;

// ------------------------------------------------------

/* ****************************************************** */
/* Utilities colors
/* ****************************************************** */

$utilities-text-emphasis-colors: (
  'primary-emphasis': var(--#{$prefix}primary-text-emphasis),
  'secondary-emphasis': var(--#{$prefix}secondary-text-emphasis),
  'success-emphasis': var(--#{$prefix}success-text-emphasis),
  'info-emphasis': var(--#{$prefix}info-text-emphasis),
  'warning-emphasis': var(--#{$prefix}warning-text-emphasis),
  'danger-emphasis': var(--#{$prefix}danger-text-emphasis),
  'light-emphasis': var(--#{$prefix}light-text-emphasis),
  'dark-emphasis': var(--#{$prefix}dark-text-emphasis),
);

$utilities-colors: $selected-theme-rgb-colors;

$utilities-text: map.merge(
  $utilities-colors,
  (
    'black': to-rgb($black),
    'white': to-rgb($white),
    'body': to-rgb($body-color),
  )
);
$utilities-text-colors: map-loop($utilities-text, rgba-css-var, '$key', 'text');
$utilities-links-underline: map-loop(
  $utilities-colors,
  rgba-css-var,
  '$key',
  'link-underline'
);

$utilities-bg: map.merge(
  $utilities-colors,
  (
    'black': to-rgb($black),
    'white': to-rgb($white),
    'body': to-rgb($body-bg),
  )
);
$utilities-bg-colors: map-loop($utilities-bg, rgba-css-var, '$key', 'bg');

$utilities-bg-subtle: (
  'primary-subtle': var(--#{$prefix}primary-bg-subtle),
  'secondary-subtle': var(--#{$prefix}secondary-bg-subtle),
  'success-subtle': var(--#{$prefix}success-bg-subtle),
  'info-subtle': var(--#{$prefix}info-bg-subtle),
  'warning-subtle': var(--#{$prefix}warning-bg-subtle),
  'danger-subtle': var(--#{$prefix}danger-bg-subtle),
  'light-subtle': var(--#{$prefix}light-bg-subtle),
  'dark-subtle': var(--#{$prefix}dark-bg-subtle),
);
// ------------------------------------------------------

/* ****************************************************** */
/* maps for the utility map in abstracts/utilities.scss
/* ****************************************************** */

$utilities-colors: $selected-theme-rgb-colors;
$border-width: 1px;
$border-widths: (
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
);
$border-style: solid;
$border-color: $gray-300;
$border-color-translucent: rgba($black, 0.175);

// scss-docs-start utilities-border-colors
$utilities-border: map.merge(
  $utilities-colors,
  (
    'black': to-rgb($black),
    'white': to-rgb($white),
  )
);

$utilities-border-colors: map-loop(
  $utilities-border,
  rgba-css-var,
  '$key',
  'border'
);

$utilities-border-subtle: (
  'primary-subtle': var(--#{$prefix}primary-border-subtle),
  'secondary-subtle': var(--#{$prefix}secondary-border-subtle),
  'success-subtle': var(--#{$prefix}success-border-subtle),
  'info-subtle': var(--#{$prefix}info-border-subtle),
  'warning-subtle': var(--#{$prefix}warning-border-subtle),
  'danger-subtle': var(--#{$prefix}danger-border-subtle),
  'light-subtle': var(--#{$prefix}light-border-subtle),
  'dark-subtle': var(--#{$prefix}dark-border-subtle),
);

$percentage-values: (
  0: 0,
  10: 10%,
  15: 15%,
  20: 20%,
  25: 25%,
  30: 30%,
  35: 35%,
  40: 40%,
  45: 45%,
  50: 50%,
  55: 55%,
  60: 60%,
  65: 65%,
  70: 70%,
  75: 75%,
  80: 80%,
  85: 85%,
  90: 90%,
  95: 95%,
  100: 100%,
);

$translateXYValues: (
  n50-n50: translate(-50%, -50%),
);
$fixed-values: (
  200px: 200px,
);
