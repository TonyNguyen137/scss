@use 'functions' as *;
@use 'sass:map';
@use 'variables' as *;

$negative-sizes: if(
  $enable-negative-margins,
  negativify-map(map.merge($sizes-regular, $sizes-irregular)),
  null
) !default;

$utilities: ();
$utilities: map-merge(
  (
    'z-highest': (
      property: z-index,
      css-variable-name: z-level-1,
      class: z-level-1,
    ),
    'z-2nd-highest': (
      property: z-index,
      css-variable-name: z-level-2,
      class: z-level-2,
    ),
    'z-3rd-highest': (
      property: z-index,
      css-variable-name: z-level-3,
      class: z-level-3,
    ),
    'z-4th-highest': (
      property: z-index,
      css-variable-name: z-level-4,
      class: z-level-4,
    ),
    'translate-negative-center': (
      property: transform,
      class: translate-n,
      values: (
        center: translate(-50%, -50%),
      ),
    ),
    'translate-center': (
      property: transform,
      class: translate,
      values: (
        center: translate(50%, 50%),
      ),
    ),
    'translate-y': (
      property: transform,
      class: translate-y,
      values: (
        0: translateY(0),
        10: translateY(10%),
        15: translateY(15%),
        20: translateY(20%),
        25: translateY(25%),
        30: translateY(30%),
        35: translateY(35%),
        40: translateY(40%),
        45: translateY(45%),
        50: translateY(50%),
        55: translateY(55%),
        60: translateY(60%),
        65: translateY(65%),
        70: translateY(70%),
        75: translateY(75%),
        80: translateY(80%),
        85: translateY(85%),
        90: translateY(90%),
        95: translateY(95%),
        100: translateY(100%),
      ),
    ),

    'translate-negative-y': (
      property: transform,
      class: translate-n-y,
      values: (
        10: translateY(-10%),
        15: translateY(-15%),
        20: translateY(-20%),
        25: translateY(-25%),
        30: translateY(-30%),
        35: translateY(-35%),
        40: translateY(-40%),
        45: translateY(-45%),
        50: translateY(-50%),
        55: translateY(-55%),
        60: translateY(-60%),
        65: translateY(-65%),
        70: translateY(-70%),
        75: translateY(-75%),
        80: translateY(-80%),
        85: translateY(-85%),
        90: translateY(-90%),
        95: translateY(-95%),
        100: translateY(-100%),
      ),
      responsive: true,
    ),
    'translate-negative-x': (
      property: transform,
      class: translate-n-x,
      values: (
        10: translateX(-10%),
        15: translateX(-15%),
        20: translateX(-20%),
        25: translateX(-25%),
        30: translateX(-30%),
        35: translateX(-35%),
        40: translateX(-40%),
        45: translateX(-45%),
        50: translateX(-50%),
        55: translateX(-55%),
        60: translateX(-60%),
        65: translateX(-65%),
        70: translateX(-70%),
        75: translateX(-75%),
        80: translateX(-80%),
        85: translateX(-85%),
        90: translateX(-90%),
        95: translateX(-95%),
        100: translateX(-100%),
      ),
      responsive: true,
    ),
    'translate-x': (
      property: transform,
      class: translate-x,
      values: (
        0: translateX(0),
        10: translateX(10%),
        15: translateX(15%),
        20: translateX(20%),
        25: translateX(25%),
        30: translateX(30%),
        35: translateX(35%),
        40: translateX(40%),
        45: translateX(45%),
        50: translateX(50%),
        55: translateX(55%),
        60: translateX(60%),
        65: translateX(65%),
        70: translateX(70%),
        75: translateX(75%),
        80: translateX(80%),
        85: translateX(85%),
        90: translateX(90%),
        95: translateX(95%),
        100: translateX(100%),
      ),
      responsive: true,
    ),

    'border-radius': (
      property: border-radius,
      class: radius,
      values: map.merge($sizes-regular, ($sizes-irregular)),
    ),
    'border-solid-black': (
      property: border,
      class: border-solid,
      values: (
        black: 1px solid black,
      ),
    ),
    'overlay': (
      property: border-image,
      class: overlay,
      values: (
        dark: fill 0 linear-gradient(#0003, #000),
      ),
    ),
    'overflow': (
      property: overflow,
      class: oveflow,
      values: hidden visible auto scroll,
    ),
    'overflow-x': (
      property: overflow,
      class: oveflow,
      values: hidden visible auto scroll clip,
    ),
    'overflow-y': (
      property: overflow,
      class: oveflow,
      values: hidden visible auto scroll clip,
    ),

    'width': (
      property: width,
      class: w,
      values: $percentage-values,
    ),
    'height': (
      property: height,
      class: h,
      values: $percentage-values,
    ),
    'box-sizing': (
      property: box-sizing,
      class: box,
      values: (
        content: content-box,
        border: border-box,
      ),
    ),
    'isolation': (
      property: isolation,
      class: isolation,
      values: (
        isolate: isolate,
      ),
    ),
    'z-index': (
      property: z-index,
      class: z,
      values: $zindex-levels,
    ),
    'position': (
      property: position,
      class: position,
      values: (
        absolute: absolute,
        relative: relative,
        static: static,
      ),
    ),
    'position-bot': (
      property: bottom,
      class: bot,
      values: $percentage-values,
    ),
    'position-top': (
      property: top,
      class: top,
      values: $percentage-values,
    ),
    'position-start': (
      property: left,
      class: left,
      values: $percentage-values,
    ),
    'position-end': (
      property: right,
      class: end,
      values: $percentage-values,
    ),
    'inset': (
      property: inset,
      class: inset,
      values: (
        full: 0,
      ),
    ),
    'border-top': (
      property: border-top,
      values: (
        solid: 1px solid #979797,
      ),
    ),
    'order': (
      property: order,
      class: order,
      values: (
        0: 0,
        1: 1,
        2: 2,
        3: 3,
      ),
      responsive: true,
    ),
    'margin': (
      property: margin,
      class: m,
      values:
        map.merge(
          map.merge($sizes-regular, $sizes-irregular),
          (
            'auto': auto,
          )
        ),
      responsive: true,
    ),

    'margin-top': (
      property: margin-top,
      class: mt,
      values:
        map.merge(
          map.merge($sizes-regular, $sizes-irregular),
          (
            'auto': auto,
          )
        ),
      responsive: true,
    ),

    'margin-bot': (
      property: margin-bottom,
      class: mb,
      values:
        map.merge(
          map.merge($sizes-regular, $sizes-irregular),
          (
            'auto': auto,
          )
        ),
      responsive: true,
    ),

    'margin-left': (
      property: margin-left,
      class: ms,
      responsive: true,
      values:
        map.merge(
          map.merge($sizes-regular, $sizes-irregular),
          (
            'auto': auto,
          )
        ),
    ),

    'margin-right': (
      property: margin-right,
      class: me,
      values:
        map.merge(
          map.merge($sizes-regular, $sizes-irregular),
          (
            'auto': auto,
          )
        ),
      responsive: true,
    ),

    'margin-inline': (
      property: margin-inline,
      class: mx,
      responsive: true,
      values:
        map.merge(
          map.merge($sizes-regular, $sizes-irregular),
          (
            'auto': auto,
          )
        ),
    ),

    'margin-block': (
      property: margin-block,
      class: my,
      values:
        map.merge(
          map.merge($sizes-regular, $sizes-irregular),
          (
            'auto': auto,
          )
        ),
      responsive: true,
    ),

    'negative-margin': (
      property: margin,
      class: m,
      values: $negative-sizes,
      responsive: true,
    ),
    'negative-margin-top': (
      property: margin-top,
      class: mt,
      values: $negative-sizes,
      responsive: true,
    ),
    'negative-margin-bottom': (
      property: margin-bottom,
      class: mb,
      values: $negative-sizes,
      responsive: true,
    ),
    'negative-margin-left': (
      property: margin-left,
      class: ms,
      values: $negative-sizes,
      responsive: true,
    ),
    'negative-margin-right': (
      property: margin-right,
      class: me,
      values: $negative-sizes,
      responsive: true,
    ),
    'negative-margin-block': (
      property: margin-block,
      class: my,
      values: $negative-sizes,
      responsive: true,
    ),
    'negative-margin-inline': (
      property: margin-inline,
      class: mx,
      values: $negative-sizes,
      responsive: true,
    ),

    'padding': (
      property: padding,
      class: p,
      values: map.merge($sizes-regular, ($sizes-irregular)),
      responsive: true,
    ),

    'padding-top': (
      property: padding-top,
      class: pt,
      values: map.merge($sizes-regular, ($sizes-irregular)),
      responsive: true,
    ),

    'padding-bottom': (
      property: padding-bottom,
      class: pb,
      values: map.merge($sizes-regular, ($sizes-irregular)),
      responsive: true,
    ),

    'padding-left': (
      property: padding-left,
      class: ps,
      values: map.merge($sizes-regular, ($sizes-irregular)),
      responsive: true,
    ),

    'padding-right': (
      property: padding-right,
      class: pe,
      values: map.merge($sizes-regular, ($sizes-irregular)),
      responsive: true,
    ),

    'padding-block': (
      property: padding-block,
      class: py,
      values: map.merge($sizes-regular, ($sizes-irregular)),
      responsive: true,
    ),

    'padding-inline': (
      property: padding-inline,
      class: px,
      values: map.merge($sizes-regular, ($sizes-irregular)),
      responsive: true,
    ),

    'display': (
      property: display,
      class: d,
      values: (
        flex: flex,
        grid: grid,
        block: block,
        inline-block: inline-block,
        inline: inline,
        contents: contents,
      ),
      responsive: true,
      important: true,
    ),
    'flex-direction': (
      property: flex-direction,
      class: flex,
      values: (
        column: column,
        row: row,
      ),
    ),
    'flex-wrap': (
      property: flex-wrap,
      class: flex,
      values: (
        nowrap: nowrap,
        wrap: wrap,
      ),
    ),
    'place-items': (
      property: place-items,
      class: place-items,
      values: center,
    ),
    'justify-content': (
      responsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      ),
    ),
    'align-items': (
      responsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      ),
    ),
    'align-self': (
      responsive: true,
      property: align-self,
      values: start center end,
    ),
    'justify-self': (
      responsive: true,
      property: justify-self,
      values: start center end,
    ),
    'flex-grow': (
      property: flex-grow,
      class: flex-grow,
      values: $order-values,
    ),
    'gap': (
      property: gap,
      class: gap,
      values: map.merge($sizes-regular, ($sizes-irregular)),
    ),

    'column-gap': (
      property: column-gap,
      class: col-gap,
      values: map.merge($sizes-regular, ($sizes-irregular)),
    ),

    'row-gap': (
      property: row-gap,
      class: row-gap,
      values: map.merge($sizes-regular, ($sizes-irregular)),
    ),

    'font-size': (
      property: font-size,
      class: fs,
      values: map.merge($sizes-regular, ($sizes-irregular)),
    ),

    'font-weight': (
      property: font-weight,
      class: fw,
      values: $font-weight,
    ),
    'text-decoration': (
      property: text-decoration,
      class: decoration,
      values: (
        none: none,
      ),
    ),
    'text-align': (
      property: text-align,
      class: text,
      values: (
        'start': start,
        'end': end,
        'center': center,
      ),
    ),
    'opacity': (
      property: opacity,
      class: opacity,
      values: $opacity,
    ),
    'background-colors': (
      property: background-color,
      local-vars: (
        'alpha': 1,
      ),
      class: bg,
      values:
        map.merge(
          map-loop(
            $active-theme-rgb,
            rgba-css-var,
            '$key',
            'alpha',
            $color-prefix
          ),
          (
            'transparent': transparent,
          )
        ),
      responsive: true,
    ),
    'text-colors': (
      property: color,
      local-vars: (
        'alpha': 1,
      ),
      class: text,
      values:
        map.merge(
          map-loop(
            $active-theme-rgb,
            rgba-css-var,
            '$key',
            'alpha',
            $color-prefix
          ),
          (
            'transparent': transparent,
          )
        ),
      responsive: true,
    ),
    'alpha-channel': (
      css-var: true,
      class: alpha,
      responsive: true,
      values: $opacity,
    ),
  ),
  $utilities
);
