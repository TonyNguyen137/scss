@use 'functions' as *;
@use 'spacing' as *;
@use 'colors' as *;
@use 'fonts' as *;
@use 'variables' as *;
@use 'sass:map';

// Utilities

// position values
$position-values: (
  0: 0,
  50: 50%,
  100: 100%,
);

// - z-index values
$zindex-levels: (
  n1: -1,
  0: 0,
  1: 1,
  2: 2,
  3: 3,
);

$percentage: (
  1: 10%,
  2: 20%,
  3: 30%,
  4: 40%,
  5: 50%,
  6: 60%,
  7: 70%,
  8: 80%,
  9: 90%,
  10: 100%,
);

/* 
  MAIN UTILITIES MAP
  syntax of a utility class: $class-$value, 
  syntax of a utility class with responsivness; $class-$breakpoint-$value

  example 1: 
  class: z,
  property: z-index,
  values: (
    1: 1, 
    2: 2, 
    3: 3, 
    4: 4
  )
  isResponsive: true,
  output: .z-1, .z-2, .z-3, .z-4;
  output responsive: .z-sm-1, z-md-1, z-lg-1 etc.

  example 2:
  class: d,
  property: display,
  values: grid
  output: .d


  example 3:
  class: justify,
  property: justify-content,
  value: (
    between: space-between,
    even: space-evenly,
  )

  output: 
  .justify-content-between
  .justify-content-even

*/

$utilities: ();
$utilities: map-merge(
  (
    'overlay': (
      property: border-image,
      class: overlay,
      values: (
        dark: fill 0 linear-gradient(#0003, #000),
      ),
    ),
    'width': (
      property: width,
      class: w,
      values: $percentage,
    ),

    'height': (
      property: height,
      class: h,
      values: $percentage,
    ),
    'box-sizing': (
      property: box-sizing,
      class: box,
      values: (
        content: content-box,
        border: border-box,
      ),
    ),
    'isolation': (
      property: isolation,
      class: isolation,
      values: (
        isolate: isolate,
      ),
    ),
    'z-index': (
      property: z-index,
      class: z,
      values: $zindex-levels,
    ),
    'position': (
      property: position,
      class: position,
      values: (
        absolute: absolute,
        relative: relative,
        static: static,
      ),
    ),
    'position-bot': (
      property: bottom,
      class: bot,
      values: $position-values,
    ),
    'inset': (
      property: inset,
      class: inset,
      values: (
        full: 0,
      ),
    ),
    'border-top': (
      property: border-top,
      values: (
        solid: 1px solid #979797,
      ),
    ),
    'margin-top': (
      property: margin-top,
      class: mt,
      values: $sizes-regular,
    ),
    'margin-top-irregular': (
      property: margin-top,
      class: mt-i,
      values: $sizes-irregular,
    ),
    'margin-bot': (
      property: margin-bottom,
      class: mb,
      values: $sizes-regular,
    ),
    'margin-bot-irregular': (
      property: margin-bottom,
      class: mb-i,
      values: $sizes-irregular,
    ),
    'margin-left': (
      property: margin-left,
      class: ms,
      values:
        map-merge(
          $sizes-regular,
          (
            auto: auto,
          )
        ),
    ),
    'margin-left-irregular': (
      property: margin-left,
      class: ms-i,
      values: $sizes-irregular,
    ),
    'margin-right': (
      property: margin-right,
      class: me,
      values: $sizes-regular,
    ),
    'margin-right-irregular': (
      property: margin-right,
      class: me-i,
      values: $sizes-irregular,
    ),
    'margin-inline': (
      property: margin-inline,
      class: mx,
      values:
        map-merge(
          $sizes-regular,
          (
            auto: auto,
          )
        ),
    ),
    'margin-inline-irregular': (
      property: margin-inline,
      class: mx-i,
      values: $sizes-irregular,
    ),
    'margin-block': (
      property: margin-block,
      class: my,
      values: $sizes-regular,
    ),
    'margin-block-irregular': (
      property: margin-block,
      class: my-i,
      values: $sizes-irregular,
    ),
    'padding-top': (
      property: padding-top,
      class: pt,
      values: $sizes-regular,
    ),
    'padding-top-irregular': (
      property: padding-top,
      class: pt-i,
      values: $sizes-irregular,
    ),
    'padding-bottom': (
      property: padding-bottom,
      class: pb,
      values: $sizes-regular,
    ),
    'padding-bottom-irregular': (
      property: padding-bottom,
      class: pb-i,
      values: $sizes-irregular,
    ),
    'padding-left': (
      property: padding-left,
      class: ps,
      values: $sizes-regular,
    ),
    'padding-left-irregular': (
      property: padding-left,
      class: ps-i,
      values: $sizes-irregular,
    ),
    'padding-right': (
      property: padding-right,
      class: pe,
      values: $sizes-regular,
    ),
    'padding-right-irregular': (
      property: padding-right,
      class: pe,
      values: $sizes-irregular,
    ),
    'padding-block': (
      property: padding-block,
      class: py,
      values: $sizes-regular,
    ),
    'padding-block-irregular': (
      property: padding-block,
      class: py-i,
      values: $sizes-irregular,
    ),
    'padding-inline': (
      property: padding-inline,
      class: px,
      values: $sizes-regular,
      isResponsive: true,
    ),
    'padding-inline-irregular': (
      property: padding-inline,
      class: px-i,
      values: $sizes-irregular,
    ),
    'display': (
      property: display,
      class: d,
      values: (
        flex: flex,
        grid: grid,
        none: none,
        block: block,
        inline-block: inline-block,
        inline: inline,
        contents: contents,
      ),
      isResponsive: true,
    ),
    'flex-direction': (
      property: flex-direction,
      class: flex,
      values: (
        column: column,
        row: row,
      ),
    ),
    'flex-wrap': (
      property: flex-wrap,
      class: flex,
      values: (
        nowrap: nowrap,
        wrap: wrap,
      ),
    ),
    'place-items': (
      property: place-items,
      class: place-items,
      values: center,
    ),

    'justify-content': (
      isResponsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      ),
    ),
    'align-items': (
      isResponsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      ),
    ),
    'flex-grow': (
      property: flex-grow,
      class: flex-grow,
      values: (
        1: 1,
        2: 2,
        3: 3,
      ),
    ),
    'gap': (
      property: gap,
      class: gap,
      values: $sizes-regular,
    ),
    'font-weight': (
      property: font-weight,
      class: fw,
      values: $font-weight,
    ),
    'text-decoration': (
      property: text-decoration,
      class: decoration,
      values: (
        none: none,
      ),
    ),
    'text-align': (
      property: text-align,
      class: text,
      values: (
        'start': start,
        'end': end,
        'center': center,
      ),
    ),
    'opacity': (
      property: opacity,
      class: opacity,
      values: $percentage,
    ),

    /* The background-colors and text-colors keys must remain unchanged. */
      'background-colors':
      (
        property: background-color,
        class: bg,
        values: $active-theme,
      ),
    'text-colors': (
      property: color,
      class: text,
      values: $active-theme,
    ),
  ),
  $utilities
);
