@use '../abstracts' as *;
@use 'sass:map';
@use 'sass:meta';
@use 'sass:list';

@each $key, $utility in $utilities {
  @if ($key == 'background-colors' or $key == 'text-colors') {
    @include generate-colors($utility, $key);
  } @else {
    @include generate-utility($utility, $key);
  }
}

$fs-default: map.get($font-sizes, default);
// css class for font-size

@each $size-name, $size-value in $fs-default {
  .#{$prefix}#{$font-prefix}#{$size-name} {
    font-size: var(--#{$prefix}#{$font-prefix}#{$size-name});
  }
}

$spacers-default: map.get($spacers, default);
// css class for spacers != default

@each $size-name, $size-value in $spacers-default {
  .#{$prefix}#{$spacer-prefix}#{$size-name}-mt {
    margin-top: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-mb {
    margin-bottom: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-ms {
    margin-left: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-me {
    margin-right: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-mx {
    margin-inline: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-my {
    margin-block: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }

  .#{$prefix}#{$size-name}-pt {
    padding-top: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-pb {
    padding-bottom: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-ps {
    padding-left: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-pe {
    padding-right: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-px {
    padding-inline: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
  .#{$prefix}#{$size-name}-my {
    padding-block: var(--#{$prefix}#{$spacer-prefix}#{$size-name});
  }
}
